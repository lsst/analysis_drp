description: Make coadd plots for QA
parameters:
  CoaddApFluxName: "i_ap09Flux"
  band: i
tasks:
  # Make a plot showing the difference between the aperture 12 magnitude and the PSF magnitude.
  # This plot shows the on sky distribution of these values for stars.
  plot_CircAp12_sub_PSF_meas_sky_stars:
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: parameters.CoaddApFluxName
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_stars_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      fixAroundZero: True
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import CoaddPlotFlagSelector, SnSelector
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_sky_gals:
    # Make a plot showing the difference between the aperture 12 magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for galaxies.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_ap12Flux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_gals_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import CoaddPlotFlagSelector, GalaxyIdentifier, SnSelector
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_calib_psf_used_sky_stars:
    # Make a plot showing the difference between the aperture 12 magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for stars that were selected as
    # having the flag calib_psf_used = True.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_ap12Flux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_calib_psf_used_stars_i
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["i_calib_psf_used"]
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      fixAroundZero: True
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import CoaddPlotFlagSelector, FlagSelector, SnSelector
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_calib_psf_used_sky_gals:
    # Make a plot showing the difference between the aperture 12 magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for galaxies that were selected as
    # having the flag calib_psf_used = True.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_ap12Flux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_calib_psf_used_gals_i
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["i_calib_psf_used"]
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, FlagSelector, GalaxyIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_calib_psf_used_sky_unknown:
    # Make a plot showing the difference between the aperture 12 magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for objects of unknown classification
    # that were selected as having the flag calib_psf_used = True.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_ap12Flux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_calib_psf_used_unknowns_i
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["i_calib_psf_used"]
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: UnknownIdentifier
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, FlagSelector, UnknownIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_PSFluxSN_meas_sky_all:
    # Make a plot showing the signal to noise ratio for the PSF flux.
    # This plot shows the on sky distribution of these values for all objects.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: DivideColumns
      axisActions.zAction.colA.column: "i_psfFlux"
      axisActions.zAction.colB.column: "i_psfFluxErr"
      connections.plotName: PSFFluxSN_meas_all_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions: None
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, SnSelector)
        from lsst.pipe.tasks.dataFrameActions import DivideColumns

  plot_Kron_sub_PSFmag_meas_sky_galaxies:
    # Make a plot showing the difference between the kron magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for galaxies.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_kronFlux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: Kron_sub_PSF_meas_galaxies_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Kron - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, GalaxyIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_Kron_sub_PSFmag_meas_sky_stars:
    # Make a plot showing the difference between the kron magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for stars.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_kronFlux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: Kron_sub_PSF_meas_stars_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: StarIdentifier
      fixAroundZero: True
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Kron - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, StarIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CModel_sub_PSFmag_meas_sky_galaxies:
    # Make a plot showing the difference between the cmodel magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for galaxies.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_cModelFlux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CModel_sub_PSF_meas_galaxies_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "CModel - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, GalaxyIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CModel_sub_PSFmag_meas_sky_stars:
    # Make a plot showing the difference between the cmodel magnitude and the PSF magnitude.
    # This plot shows the on sky distribution of these values for stars.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "i_cModelFlux"
      axisActions.zAction.col2: "i_psfFlux"
      connections.plotName: CModel_sub_PSF_meas_stars_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: StarIdentifier
      fixAroundZero: True
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "CModel - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, StarIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_calib_psf_used_stars_scatter:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PSF
    # magnitude for stars. These objects were all selected as having the flag calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlot.ScatterPlotWithTwoHistsTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "i_ap12Flux"
      axisActions.yAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_calib_psf_used_stars_i
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["i_calib_psf_used"]
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: StarIdentifier
      axisLabels: {"x": "Circ Ap 12 (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, FlagSelector, StarIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_stars_scatter:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PSF
    # magnitude for stars.
    class: lsst.analysis.drp.scatterPlot.ScatterPlotWithTwoHistsTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "i_ap12Flux"
      axisActions.yAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_stars_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: StarIdentifier
      axisLabels: {"x": "Circ Ap 12 (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, FlagSelector, StarIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_calib_psf_used_gals_scatter:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PSF
    # magnitude for galaxies. These objects were all selected as having the flag
    # calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlot.ScatterPlotWithTwoHistsTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "i_ap12Flux"
      axisActions.yAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_calib_psf_used_gals_i
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["i_calib_psf_used"]
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      axisLabels: {"x": "Circ Ap 12 (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, FlagSelector, GalaxyIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PSF_meas_gals_scatter:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PSF
    # magnitude for galaxies.
    class: lsst.analysis.drp.scatterPlot.ScatterPlotWithTwoHistsTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "i_ap12Flux"
      axisActions.yAction.col2: "i_psfFlux"
      connections.plotName: CircAp12_sub_PSF_meas_gals_i
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 100
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      axisLabels: {"x": "Circ Ap 12 (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (CoaddPlotFlagSelector, FlagSelector, GalaxyIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff


  skyPlot_skyObject:
    # Make a plot showing the 9-pixel radius circular aperture flux in units of nJy.
    # This plot shows the on sky distribution of these values for sky objects.
    class: lsst.analysis.drp.skyPlot.SkyPlotTask
    config:
      connections.plotName: skyObject_i
      selectorActions.flagSelector: FlagSelector
      selectorActions.flagSelector.selectWhenTrue: ["sky_object"]
      selectorActions.flagSelector.selectWhenFalse: ["i_pixelFlags_edge"]
      sourceSelectorActions: None
      statisticSelectorActions.statSelector.threshold: -1e12
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Sky Object Flux (nJy)"}
      axisActions.zAction.column: "i_ap09Flux"
      python: |
        from lsst.analysis.drp.dataSelectors import (FlagSelector)

  histPlot_skyObject:
    # Make a plot showing histograms of the PSFlux and 9-pixel radius circular aperture flux.
    # The left panel histograms show flux in units of nJy.
    # The right panel histograms show the equivalent sigma flux values (flux/fluxErr)
    class: lsst.analysis.drp.histPlot.HistPlotTask
    config:
      connections.plotName: skyObject_i
      selectorActions.flagSelector: FlagSelector
      selectorActions.flagSelector.selectWhenTrue: ["sky_object"]
      selectorActions.flagSelector.selectWhenFalse: ["i_pixelFlags_edge"]
      python: |
        from lsst.analysis.drp.dataSelectors import FlagSelector
        from lsst.analysis.drp import calcFunctors
        from lsst.pipe.tasks.dataFrameActions import SingleColumnAction
        config.panels["panel1"] = HistPlotConfig
        config.panels["panel1"].label = "Flux (nJy)"
        config.panels["panel1"].actions.update = {
          "hist1": SingleColumnAction(column="i_psfFlux"),
          "hist2": SingleColumnAction(column="i_ap09Flux"),
        }
        config.panels["panel1"].histLabels = {
          "hist1": "psfFlux",
          "hist2": "ap09Flux",
        }
        config.panels["panel2"] = HistPlotConfig
        config.panels["panel2"].label = "S/N"
        config.panels["panel2"].actions.update = {
          "hist1": calcFunctors.SNCalculator(
            colA=SingleColumnAction(column="i_psfFlux"),
            colB=SingleColumnAction(column="i_psfFluxErr"),),
          "hist2": calcFunctors.SNCalculator(
            colA=SingleColumnAction(column="i_ap09Flux"),
            colB=SingleColumnAction(column="i_ap09FluxErr"),),
        }
        config.panels["panel2"].histLabels = {
          "hist1": "psfFlux SN",
          "hist2": "ap09Flux SN",
        }

  plot_ri_gr_cmodel:
    # Make a color color plot of gri in CModel magnitudes.
    class: lsst.analysis.drp.colorColorPlot.ColorColorPlotTask
    config:
      connections.plotName: ri_gr_cmodel
      axisActions.xAction.magDiff.col1: "g_cModelFlux"
      axisActions.xAction.magDiff.col2: "r_cModelFlux"
      axisActions.xAction.magDiff.returnMillimags: False
      axisActions.yAction.magDiff.col1: "r_cModelFlux"
      axisActions.yAction.magDiff.col2: "i_cModelFlux"
      axisActions.yAction.magDiff.returnMillimags: False
      axisActions.zAction.column: "i_cModelFlux"
      axisLabels: {"x": "g - r CModel Magnitude (mag)",
                   "y": "r - i CModel Magnitude (mag)",
                   "z": "i_cModelMag (mag)"}
      selectorActions.coaddSelector: FlagSelector
      selectorActions.coaddSelector.selectWhenFalse: ["g_cModel_flag", "r_cModel_flag", "i_cModel_flag"]
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["g", "r", "i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "cModelFlux"
      selectorActions.SnSelector.threshold: 50
      selectorActions.SnSelector.bands: ["g", "r", "i"]
      python: >
        from lsst.analysis.drp.dataSelectors import FlagSelector, CoaddPlotFlagSelector, SnSelector

  plot_ri_gr_psf:
    # Make a color color plot of gri in PSF magnitudes.
    class: lsst.analysis.drp.colorColorPlot.ColorColorPlotTask
    config:
      connections.plotName: ri_gr_psf
      axisActions.xAction.magDiff.col1: "g_psfFlux"
      axisActions.xAction.magDiff.col2: "r_psfFlux"
      axisActions.xAction.magDiff.returnMillimags: False
      axisActions.yAction.magDiff.col1: "r_psfFlux"
      axisActions.yAction.magDiff.col2: "i_psfFlux"
      axisActions.yAction.magDiff.returnMillimags: False
      axisActions.zAction.column: "i_psfFlux"
      axisLabels: {"x": "g - r PSF Magnitude (mag)",
                   "y": "r - i PSF Magnitude (mag)",
                   "z": "i_PsfMag (mag)"}
      selectorActions.flagSelector: CoaddPlotFlagSelector
      selectorActions.flagSelector.bands: ["g", "r", "i"]
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 50
      selectorActions.SnSelector.bands: ["g", "r", "i"]
      python: >
       from lsst.analysis.drp.dataSelectors import FlagSelector, CoaddPlotFlagSelector, SnSelector
