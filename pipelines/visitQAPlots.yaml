description: |
    Make visit level plots for QA, this pipeline makes sky distribution plots and histograms of
    various quantities for the purposes of QA. These plots focus on photometry QA and look at the
    differences between different types of magnitude.
    For visit level plots the bands needs to be set to [""] to allow the code to be reused between
    the coadd level tables, which have band_ prepended to their column names, and the visit level
    tables which do not.
parameters:
  ApFluxName: "ap12Flux"
  band: i
tasks:
  # Make a plot showing the difference between the aperture 12 magnitude and the PS magnitude.
  # This plot shows the on sky distribution of these values for stars.
  plot_CircAp12_sub_PS_meas_sky_stars_visit:
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: parameters.ApFluxName
      axisActions.zAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_stars
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: psfFlux
      selectorActions.SnSelector.threshold: 10
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import VisitPlotFlagSelector, SnSelector
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_meas_sky_gals_visit:
    # Make a plot showing the difference between the aperture 12 magnitude and the PS magnitude.
    # This plot shows the on sky distribution of these values for galaxies.
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "ap12Flux"
      axisActions.zAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_gals
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      sourceSelectorActions.sourceSelector.band: ""
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import VisitPlotFlagSelector, GalaxyIdentifier, SnSelector
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_meas_calib_psf_used_sky_stars_visit:
    # Make a plot showing the difference between the aperture 12 magnitude and the PS magnitude.
    # This plot shows the on sky distribution of these values for stars that were selected as
    # having the flag calib_psf_used = True.
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "ap12Flux"
      axisActions.zAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_calib_psf_used_stars
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["calib_psf_used"]
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import VisitPlotFlagSelector, FlagSelector, SnSelector
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_meas_calib_psf_used_sky_gals_visit:
    # Make a plot showing the difference between the aperture 12 magnitude and the PS magnitude.
    # This plot shows the on sky distribution of these values for galaxies that were selected as
    # having the flag calib_psf_used = True.
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "ap12Flux"
      axisActions.zAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_calib_psf_used_gals
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["calib_psf_used"]
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      sourceSelectorActions.sourceSelector.band: ""
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, FlagSelector, GalaxyIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_calib_psf_used_sky_unknown_visit:
    # Make a plot showing the difference between the aperture 12 magnitude and the PS magnitude.
    # This plot shows the on sky distribution of these values for objects of unknown classification
    # that were selected as having the flag calib_psf_used = True.
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction: MagDiff
      axisActions.zAction.col1: "ap12Flux"
      axisActions.zAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_calib_psf_used_unkowns
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["calib_psf_used"]
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.sourceSelector: UnknownIdentifier
      sourceSelectorActions.sourceSelector.band: ""
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, FlagSelector, UnknownIdentifier,
        SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_PSFluxSN_meas_sky_all_visit:
    # Make a plot showing the signal to noise ratio for the PS flux.
    # This plot shows the on sky distribution of these values for all objects.
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction: DivideColumns
      axisActions.zAction.colA.column: "psfFlux"
      axisActions.zAction.colB.column: "psfFluxErr"
      connections.plotName: PSFluxSN_meas_all
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      selectorActions.SnSelector.bands: [""]
      sourceSelectorActions: None
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, SnSelector)
        from lsst.pipe.tasks.dataFrameActions import DivideColumns

  plot_CircAp12_sub_PS_meas_calib_psf_used_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object. These objects were all selected as having the flag
    # calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap12Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas_calib_psf_used
      selectorActions.calibPointSelector: FlagSelector
      selectorActions.calibPointSelector.selectWhenTrue: ["calib_psf_used"]
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.update: {"galaxySelector": GalaxyIdentifier,
                                     "unknownSelector": UnknownIdentifier}
      sourceSelectorActions.galaxySelector.band: ""
      sourceSelectorActions.unknownSelector.band: ""
      axisLabels: {"x": "PSF Magnitude (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, FlagSelector, GalaxyIdentifier,
                                                     SnSelector, UnknownIdentifier)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_all_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object. These objects were all selected as having the flag
    # calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap12Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_all
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.update: {"galaxySelector": GalaxyIdentifier}
      sourceSelectorActions.galaxySelector.band: ""
      axisLabels: {"x": "PSF Magnitude (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, GalaxyIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp25_sub_PS_all_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object. These objects were all selected as having the flag
    # calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap25Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp25_sub_PS_all
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.update: {"galaxySelector": GalaxyIdentifier}
      sourceSelectorActions.galaxySelector.band: ""
      axisLabels: {"x": "PSF Magnitude (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 25 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, GalaxyIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_gals_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object. These objects were all selected as having the flag
    # calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap12Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_gals
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      sourceSelectorActions.sourceSelector.band: ""
      axisLabels: {"x": "PSF Magnitude (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, GalaxyIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp25_sub_PS_gals_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object. These objects were all selected as having the flag
    # calib_psf_used = True.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap25Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp25_sub_PS_gals
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      sourceSelectorActions.sourceSelector: GalaxyIdentifier
      sourceSelectorActions.sourceSelector.band: ""
      axisLabels: {"x": "PSF Magnitude (msg)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 25 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, GalaxyIdentifier, SnSelector)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp12_sub_PS_meas_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap12Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp12_sub_PS_meas
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      axisLabels: {"x": "Circ Ap 12 (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 12 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, FlagSelector, GalaxyIdentifier,
        SnSelector, UnknownIdentifier)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_CircAp25_sub_PS_meas_scatter_visit:
    # Make a scatter plot showing the difference between the circular aperture 12 magnitude and the PS
    # magnitude for all types of object.
    class: lsst.analysis.drp.scatterPlotVisit.ScatterPlotVisitTask
    config:
      axisActions.yAction: MagDiff
      axisActions.yAction.col1: "ap25Flux"
      axisActions.yAction.col2: "psfFlux"
      connections.plotName: CircAp25_sub_PS_meas
      selectorActions.flagSelector: VisitPlotFlagSelector
      selectorActions.SnSelector: SnSelector
      selectorActions.SnSelector.bands: [""]
      selectorActions.SnSelector.fluxType: "psfFlux"
      selectorActions.SnSelector.threshold: 10
      axisLabels: {"x": "PSF Magnitude (mag)", "mag": "PSF Magnitude (mag)",
                   "y": "Circular Ap 25 - PSF (mmag) (Meas)"}
      python: |
        from lsst.analysis.drp.dataSelectors import (VisitPlotFlagSelector, FlagSelector, GalaxyIdentifier,
        SnSelector, UnknownIdentifier)
        from lsst.analysis.drp.calcFunctors import MagDiff

  plot_skyObject_sky_visit:
    # Make a plot showing the 9-pixel radius circular aperture flux in units of nJy.
    # This plot shows the on sky distribution of these values for sky objects.
    class: lsst.analysis.drp.skyPlotVisit.SkyPlotVisitTask
    config:
      axisActions.zAction.column: "ap09Flux"
      connections.plotName: skyObject
      selectorActions.flagSelector: FlagSelector
      selectorActions.flagSelector.selectWhenTrue: ["sky_source"]
      sourceSelectorActions: None
      statisticSelectorActions.statSelector.threshold: -1e12
      axisLabels: {"x": "R.A. (Degrees)", "y": "Dec. (Degrees)", "z": "Sky Object Flux (nJy)"}
      python: |
       from lsst.analysis.drp.dataSelectors import (FlagSelector)
